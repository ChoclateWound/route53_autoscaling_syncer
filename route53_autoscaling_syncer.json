{
  "Parameters": {
    "Subnets": {
      "Description": "",
      "Type": "CommaDelimitedList"
    },
    "VpcId": {
      "Description": "",
      "Type": "String"
    },
    "ClusterSize": {
      "Default": "1",
      "Description": "Number of nodes to launch",
      "Type": "Number"
    },
    "InstanceAmi": {
      "Default": "ami-d05e75b8",
      "Description": "Default: Ubuntu 14.04 LTS in us-east-1, ami-d05e75b8",
      "Type": "String"
    },
    "InstanceType": {
      "Description": "",
      "Type": "String",
      "Default": "t2.micro"
    },
    "KeyName": {
      "Default": "default",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String"
    },
    "AutoScalingGroupName": {
      "Description": "",
      "Type": "String"
    },
    "Interval": {
      "Description": "",
      "Type": "String",
      "Default": "15"
    },
    "Route53Zone": {
      "Description": "",
      "Type": "String"
    },
    "Route53RecordName": {
      "Description": "",
      "Type": "String"
    },
    "SourceTarball": {
      "Description": "",
      "Type": "String",
      "Default": "https://github.com/RUNDSP/route53_autoscaling_syncer/tarball/0.1"
    }
  },
  "Resources": {
    "r53asASG": {
      "Properties": {
        "VPCZoneIdentifier": {"Ref": "Subnets"},
        "DesiredCapacity": {"Ref": "ClusterSize"},
        "LaunchConfigurationName": {"Ref": "r53asLC"},
        "LoadBalancerNames": [{"Ref": "r53asLB"}],
        "MaxSize": 3,
        "MinSize": 1
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": "1000"
        }
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup"
    },
    "r53asIAM": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": ["sts:AssumeRole"],
              "Effect": "Allow",
              "Principal": {"Service": ["ec2.amazonaws.com"]}
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "autoscaling:DescribeAutoScalingGroups",
                    "autoscaling:DescribeAutoScalingInstances",
                    "cloudwatch:*",
                    "ec2:DescribeInstances",
                    "route53:ChangeResourceRecordSets",
                    "route53:GetChange",
                    "route53:ListHostedZones"
                  ],
                  "Effect": "Allow",
                  "Resource": ["*"]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "r53asiampolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "r53asIAMInstanceProfile": {
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "r53asIAM"}]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "r53asLC": {
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "apt": {
                "python-pip": []
              }
            },
            "sources": {
              "/route53_autoscaling_syncer": {"Ref": "SourceTarball"}
            },
            "commands": {
              "01 install boto": {
                "command": "sudo pip install boto==2.38.0"
              }
            },
            "files": {
              "/etc/init.d/route53_autoscaling_syncer": {
                "content": {"Fn::Join": ["", [
                  "#!/bin/bash\n",
                  "start () {\n",
                  "  echo \"starting route53_autoscaling_syncer\"\n",
                  "  python /route53_autoscaling_syncer/route53_autoscaling_syncer.py",
                  "    --interface 0.0.0.0 --port 80 --region ", {"Ref": "AWS::Region"},
                  "    --autoscaling-group '", {"Ref": "AutoScalingGroupName"}, "'",
                  "    --interval ", {"Ref": "Interval"},
                  "    --zone ", {"Ref": "Route53Zone"},
                  "    --domain ", {"Ref": "Route53RecordName"}, " &\n",
                  "}\n",
                  "stop () {\n",
                  "    echo \"stopping route53_autoscaling_syncer\"\n",
                  "    kill $(ps aux | grep \"python /route53_autoscaling_syncer/route53_autoscaling_syncer.py\" | awk '{print $2}')\n",
                  "}\n",
                  "case \"$1\" in\n",
                  "  start)\n",
                  "    start\n",
                  "    ;;\n",
                  "  stop)\n",
                  "    stop\n",
                  "    ;;\n",
                  "  restart)\n",
                  "    stop\n",
                  "    start\n",
                  "    ;;\n",
                  "  *)\n",
                  "    echo $\"Usage: $0 {start|stop|restart}\"\n",
                  "    exit 1\n",
                  "esac\n",
                  "exit 0\n"
                ]]},
                "mode": "000755",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {"Fn::Join": ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -v ",
                  "         --stack ", {"Ref": "AWS::StackName"},
                  "         --resource r53asLC ",
                  "         --region ", {"Ref": "AWS::Region"}, "\n",
                  "runas=root\n"
                ]]}
              },
              "/etc/cfn/cfn-hup.conf": {
                "content": {"Fn::Join": ["", [
                  "[main]\n",
                  "stack=", {"Ref": "AWS::StackName"}, "\n"
                ]]}
              }
            },
            "services": {
              "sysvinit": {
                "route53_autoscaling_syncer": {
                  "enabled" : "true",
                  "ensureRunning" : "true",
                  "sources": ["/route53_autoscaling_syncer"]
                },
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "IamInstanceProfile": {"Ref": "r53asIAMInstanceProfile"},
        "ImageId": {"Ref": "InstanceAmi"},
        "InstanceType": {"Ref": "InstanceType"},
        "KeyName": {"Ref": "KeyName"},
        "SecurityGroups": [{"Fn::GetAtt": ["r53asCFSG", "GroupId"]}],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "apt-get update\n",
                "apt-get install -y python-pip\n",
                "pip install https://s3.amazonaws.com/run-infrastructure/cloudformation/aws-cfn-bootstrap-1.4-8.tar.gz\n",
                "# Set up cfn-hup to apply future updates to the stack\n",
                "cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup\n",
                "chmod +x /etc/init.d/cfn-hup\n",
                "update-rc.d cfn-hup defaults\n",
                "service cfn-hup start\n",
                "# Install files and run the commands from the metadata\n",
                "cfn-init -v ",
                "     --stack ", {"Ref": "AWS::StackName"},
                "     --resource r53asLC ",
                "     --region ", {"Ref": "AWS::Region"}, "\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "r53asCFSG": {
      "Properties": {
        "GroupDescription": "Enable SSH access",
        "VpcId": {"Ref": "VpcId"},
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22"
          },
          {
            "SourceSecurityGroupId": {"Ref": "r53asLBSG"},
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80"
          }
        ]
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "r53asLBSG": {
      "Properties": {
        "GroupDescription": "Load balancer security group",
        "VpcId": {"Ref": "VpcId"}
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "r53asLB": {
      "Properties": {
        "Scheme": "internal",
        "Subnets": {"Ref": "Subnets"},
        "SecurityGroups": [{"Ref": "r53asLBSG"}],
        "HealthCheck": {
          "Target": "HTTP:80/healthcheck",
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "2",
          "Interval": "15",
          "Timeout": "10"
        },
        "Listeners": [
          {
            "InstancePort": 80,
            "Protocol": "HTTP",
            "LoadBalancerPort": 80
          }
        ],
        "Tags": [{"Key": "Stack", "Value": {"Ref": "AWS::StackName"}}]
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
    }
  }
}
